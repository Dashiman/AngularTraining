{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LeagueOfLegendsComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LeagueOfLegendsComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Nieprawid\\u0142owa nazwa \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LeagueOfLegendsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LeagueOfLegendsComponent_div_10_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, LeagueOfLegendsComponent_div_10_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"invalidName\"]);\n  }\n}\nfunction LeagueOfLegendsComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const c_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r4.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r4.blurb, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r4.title, \" \");\n  }\n}\nexport class LeagueOfLegendsComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.baseUrl = \"https://eun1.api.riotgames.com/\";\n    this.champions = [];\n    this.form = new FormGroup({\n      name: new FormControl(null, [Validators.required, nameValidator()])\n    });\n    // Validators.pattern(\"^[0-9]*$\")\n  }\n\n  get name() {\n    return this.form.get('name');\n  }\n  ngOnInit() {\n    forkJoin([this.apiService.getTanks(), this.apiService.getChampions()]).subscribe({\n      next: ([tanks, typeData2]) => {\n        // console.log(typeData1)\n        console.log(typeData2);\n        this.champions = Object.values(typeData2);\n        console.log(this.champions);\n        console.log(this.champions[0]);\n        console.log(tanks);\n        //this.champions= this.champions.filter(element => {\n        //  return element.id === \"Garen\";\n        //});\n        console.log(this.champions);\n      },\n      //next: res => {\n      //  console.log(res[0])\n      //  console.log(res[1])\n      //},\n      error: err => {\n        console.log(err);\n      }\n    });\n    //this.apiService.getSummoner(this.baseUrl, \"Nitro\").subscribe({\n    //  next: result => {\n    //    console.log(result)\n    //  },\n    //  error: err => {\n    //    console.log(err)\n    //  }\n    //})\n  }\n\n  static {\n    this.ɵfac = function LeagueOfLegendsComponent_Factory(t) {\n      return new (t || LeagueOfLegendsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LeagueOfLegendsComponent,\n      selectors: [[\"app-league-of-legends\"]],\n      decls: 22,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-10\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"col-6\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-12\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n      template: function LeagueOfLegendsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n          i0.ɵɵtext(5, \"League of Legends\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6)(8, \"div\", 7);\n          i0.ɵɵelement(9, \"input\", 8);\n          i0.ɵɵtemplate(10, LeagueOfLegendsComponent_div_10_Template, 3, 2, \"div\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11)(13, \"table\", 12)(14, \"tr\")(15, \"td\");\n          i0.ɵɵtext(16, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"td\");\n          i0.ɵɵtext(18, \"Descrption\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"td\");\n          i0.ɵɵtext(20, \"Title\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(21, LeagueOfLegendsComponent_tr_21_Template, 7, 3, \"tr\", 13);\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.name.invalid && (ctx.name.dirty || ctx.name.touched));\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.champions);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport function nameValidator() {\n  return control => {\n    const forbidden = \"XYZ\";\n    return forbidden == control.value ? {\n      invalidName: {\n        value: control.value\n      }\n    } : null;\n  };\n}","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","forkJoin","i0","LeagueOfLegendsComponent","constructor","apiService","form","name","required","nameValidator","get","ngOnInit","getTanks","getChampions","subscribe","next","tanks","typeData2","console","log","champions","Object","values","error","err","selectors","decls","vars","consts","template","control","forbidden","value","invalidName"],"sourceRoot":"","sources":["C:\\Users\\darre\\Documents\\GitHub\\AngularTraining\\AngularTraining\\ClientApp\\src\\app\\league-of-legends\\league-of-legends.component.ts","C:\\Users\\darre\\Documents\\GitHub\\AngularTraining\\AngularTraining\\ClientApp\\src\\app\\league-of-legends\\league-of-legends.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { forkJoin, map } from 'rxjs';\r\nimport { ApiService } from '../api-service.service';\r\n\r\n@Component({\r\n  selector: 'app-league-of-legends',\r\n  templateUrl: './league-of-legends.component.html',\r\n  styleUrls: ['./league-of-legends.component.css']\r\n})\r\nexport class LeagueOfLegendsComponent implements OnInit {\r\n  baseUrl: string = \"https://eun1.api.riotgames.com/\";\r\n  form: FormGroup;\r\n  champions: Champion[] = [];\r\n  constructor(private apiService: ApiService) {\r\n    this.form = new FormGroup({\r\n      name: new FormControl(null, [Validators.required, nameValidator()]),\r\n    })\r\n    // Validators.pattern(\"^[0-9]*$\")\r\n  }\r\n  get name() { return this.form.get('name'); }\r\n  ngOnInit(): void {\r\n    forkJoin([\r\n      this.apiService.getTanks(),\r\n      this.apiService.getChampions()\r\n    ]\r\n    ).subscribe({\r\n      next: ([tanks, typeData2]) => {\r\n        // console.log(typeData1)\r\n        console.log(typeData2)\r\n        this.champions = Object.values(typeData2);\r\n        console.log(this.champions)\r\n        console.log(this.champions[0])\r\n        console.log(tanks)\r\n        //this.champions= this.champions.filter(element => {\r\n        //  return element.id === \"Garen\";\r\n        //});\r\n        console.log(this.champions)\r\n      },\r\n      //next: res => {\r\n      //  console.log(res[0])\r\n      //  console.log(res[1])\r\n      //},\r\n      error: err => {\r\n        console.log(err)\r\n      }\r\n    })\r\n\r\n\r\n    //this.apiService.getSummoner(this.baseUrl, \"Nitro\").subscribe({\r\n    //  next: result => {\r\n    //    console.log(result)\r\n    //  },\r\n    //  error: err => {\r\n    //    console.log(err)\r\n    //  }\r\n    //})\r\n  }\r\n\r\n}\r\nexport interface Champion {\r\n  blurb: string;\r\n  id: string;\r\n  name: string;\r\n  title: string\r\n}\r\nexport function nameValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const forbidden = \"XYZ\";\r\n    return forbidden == control.value ? { invalidName: { value: control.value } } : null;\r\n  };\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-10\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">League of Legends</div>\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"form\">\r\n            <div class=\"col-6\">\r\n\r\n              <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\" formControlName=\"name\">\r\n              <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\r\n                   class=\"alert alert-danger\">\r\n\r\n                <div *ngIf=\"name.errors?.['required']\">\r\n                  Name is required.\r\n                </div>\r\n                <div *ngIf=\"name.errors?.['invalidName']\">\r\n                  Nieprawidłowa nazwa\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <table class=\"table table-striped\">\r\n                <tr>\r\n                  <td>Name</td>\r\n                  <td>Descrption</td>\r\n                  <td>Title</td>\r\n                </tr>\r\n                <tr *ngFor=\"let c of champions\">\r\n                  <td>\r\n                    {{c.name}}\r\n                  </td>\r\n                  <td>\r\n                    {{c.blurb}}\r\n                  </td>\r\n                  <td>\r\n                    {{c.title}}\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}