{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LeagueOfLegendsComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LeagueOfLegendsComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Nieprawid\\u0142owa nazwa \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LeagueOfLegendsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LeagueOfLegendsComponent_div_10_div_1_Template, 2, 0, \"div\", 15)(2, LeagueOfLegendsComponent_div_10_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"invalidName\"]);\n  }\n}\nfunction LeagueOfLegendsComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.blurb, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", c_r2.title, \" \");\n  }\n}\nexport let LeagueOfLegendsComponent = /*#__PURE__*/(() => {\n  class LeagueOfLegendsComponent {\n    constructor(apiService) {\n      this.apiService = apiService;\n      this.baseUrl = \"https://eun1.api.riotgames.com/\";\n      this.champions = [];\n      this.form = new FormGroup({\n        name: new FormControl(null, [Validators.required, nameValidator()])\n      });\n      // Validators.pattern(\"^[0-9]*$\")\n    }\n    get name() {\n      return this.form.get('name');\n    }\n    ngOnInit() {\n      forkJoin([this.apiService.getTanks(), this.apiService.getChampions()]).subscribe({\n        next: ([tanks, typeData2]) => {\n          // console.log(typeData1)\n          console.log(typeData2);\n          this.champions = Object.values(typeData2);\n          console.log(this.champions);\n          console.log(this.champions[0]);\n          console.log(tanks);\n          //this.champions= this.champions.filter(element => {\n          //  return element.id === \"Garen\";\n          //});\n          console.log(this.champions);\n        },\n        //next: res => {\n        //  console.log(res[0])\n        //  console.log(res[1])\n        //},\n        error: err => {\n          console.log(err);\n        }\n      });\n      //this.apiService.getSummoner(this.baseUrl, \"Nitro\").subscribe({\n      //  next: result => {\n      //    console.log(result)\n      //  },\n      //  error: err => {\n      //    console.log(err)\n      //  }\n      //})\n    }\n    static {\n      this.ɵfac = function LeagueOfLegendsComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LeagueOfLegendsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LeagueOfLegendsComponent,\n        selectors: [[\"app-league-of-legends\"]],\n        decls: 22,\n        vars: 3,\n        consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-10\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"col-6\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"row\"], [1, \"col-12\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n        template: function LeagueOfLegendsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n            i0.ɵɵtext(5, \"League of Legends\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6)(8, \"div\", 7);\n            i0.ɵɵelement(9, \"input\", 8);\n            i0.ɵɵtemplate(10, LeagueOfLegendsComponent_div_10_Template, 3, 2, \"div\", 9);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11)(13, \"table\", 12)(14, \"tr\")(15, \"td\");\n            i0.ɵɵtext(16, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"td\");\n            i0.ɵɵtext(18, \"Descrption\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"td\");\n            i0.ɵɵtext(20, \"Title\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(21, LeagueOfLegendsComponent_tr_21_Template, 7, 3, \"tr\", 13);\n            i0.ɵɵelementEnd()()()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.name.invalid && (ctx.name.dirty || ctx.name.touched));\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"ngForOf\", ctx.champions);\n          }\n        },\n        dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName]\n      });\n    }\n  }\n  return LeagueOfLegendsComponent;\n})();\nexport function nameValidator() {\n  return control => {\n    const forbidden = \"XYZ\";\n    return forbidden == control.value ? {\n      invalidName: {\n        value: control.value\n      }\n    } : null;\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}